<Page
    x:Class="OMDb.WinUI3.Views.LabelPropertyPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:DbModels="using:OMDb.Core.DbModels"
    xmlns:Interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:controls="using:CommunityToolkit.WinUI.UI.Controls"
    xmlns:coverters="using:OMDb.WinUI3.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:local="using:OMDb.WinUI3.Views"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:models="using:OMDb.WinUI3.Models"
    xmlns:viewmodels="using:OMDb.WinUI3.ViewModels"
    NavigationCacheMode="Enabled"
    mc:Ignorable="d">
    <Page.Resources>
        <DataTemplate x:Key="CategoryTemplate" x:DataType="models:LabelPropertyTree">
            <StackPanel>
                <TextBlock
                    Padding="8"
                    Style="{StaticResource TitleTextBlockStyle}"
                    Text="{x:Bind LabelProperty.Name}" />
                <ItemsRepeater
                    x:Name="innerRepeater"
                    ItemTemplate="{StaticResource StringDataTemplateColor}"
                    ItemsSource="{x:Bind Children}">
                    <ItemsRepeater.Layout>
                        <StackLayout Orientation="Horizontal" />
                    </ItemsRepeater.Layout>
                </ItemsRepeater>
            </StackPanel>
        </DataTemplate>

        <DataTemplate x:Key="StringDataTemplateColor" x:DataType="models:LabelPropertyTree">
            <Grid Margin="10,0,10,10" Background="{StaticResource SystemControlBackgroundAccentBrush}">
                <TextBlock
                    Padding="10"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Foreground="{StaticResource SystemControlForegroundAltHighBrush}"
                    Text="{x:Bind LabelProperty.Name}"
                    TextWrapping="Wrap" />
            </Grid>
        </DataTemplate>

    </Page.Resources>

    <!--
        The nested ItemsRepeater experience is achieved by creating one ItemsRepeater (outerRepeater below)
        and creating another ItemsRepeater (innerRepeater below) inside the outer one's DataTemplate. Below is
        the outer ItemsRepeater definition and the DataTemplate it uses.
    -->
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid Grid.Row="0">
            <CommandBar OverflowButtonVisibility="Collapsed">
                <AppBarButton Icon="Add">
                    <AppBarButton.Flyout>
                        <MenuFlyout Placement="LeftEdgeAlignedTop">
                            <MenuFlyoutItem Click="ADD_Property_Click" Text="Add Property" />
                            <MenuFlyoutItem Click="ADD_PropertyData_Click" Text="Add PropertyData" />
                            <MenuFlyoutItem Click="ADD_PropertyDataLink_Click" Text="Add PropertyDataLink" />
                        </MenuFlyout>
                    </AppBarButton.Flyout>
                </AppBarButton>
                <AppBarButton Icon="Edit" Visibility="Collapsed">
                    <AppBarButton.Flyout>
                        <MenuFlyout Placement="Left">
                            <MenuFlyoutItem Click="Edit_Property_Click" Text="Edit Property" />
                            <MenuFlyoutItem Click="Edit_PropertyData_Click" Text="Edit PropertyData" />
                        </MenuFlyout>
                    </AppBarButton.Flyout>
                </AppBarButton>
                <AppBarButton Icon="Delete" Visibility="Collapsed">
                    <AppBarButton.Flyout>
                        <MenuFlyout Placement="LeftEdgeAlignedTop">
                            <MenuFlyoutItem Click="Delete_Property_Click" Text="Delete Property" />
                            <MenuFlyoutItem Click="Delete_PropertyData_Click" Text="Delete PropertyData" />
                        </MenuFlyout>
                    </AppBarButton.Flyout>
                </AppBarButton>
                <AppBarButton Icon="Link" Visibility="Collapsed">
                    <AppBarButton.Flyout>
                        <MenuFlyout Placement="LeftEdgeAlignedTop">
                            <!--<MenuFlyoutItem Click="ADD_PropertyLink_Click" Text="Add Property Link" />-->
                            <MenuFlyoutItem Click="ADD_PropertyDataLink_Click" Text="Add PropertyDataLink" />
                            <MenuFlyoutItem Click="Delete_PropertyLink_Click" Text="Delete PropertyLink" />
                            <MenuFlyoutItem Click="Delete_PropertyDataLink_Click" Text="Delete PropertyDataLink" />
                        </MenuFlyout>
                    </AppBarButton.Flyout>
                </AppBarButton>
                <AppBarButton Command="{x:Bind VM.RefreshCommand}" Icon="Refresh">
                    <AppBarButton.KeyboardAccelerators>
                        <KeyboardAccelerator Key="F5" />
                    </AppBarButton.KeyboardAccelerators>
                </AppBarButton>
            </CommandBar>
        </Grid>
        <Grid Grid.Row="1">
            <controls:DockPanel
                x:Name="SampleDockPanel"
                Margin="0"
                LastChildFill="False">
                <Grid
                    Width="200"
                    controls:DockPanel.Dock="Left"
                    BorderBrush="BlueViolet"
                    BorderThickness="0">
                    <ListView
                        x:Name="ListView_LabelPropertyTrees"
                        ItemsSource="{x:Bind VM.LabelPropertyTrees, Mode=OneWay}"
                        SelectedItem="{x:Bind VM.CurrentLabelPropertyTree,Mode=TwoWay}">
                        <!--  SelectionChanged="ListView_SelectionChanged">  -->
                        <i:Interaction.Behaviors>
                            <Core:EventTriggerBehavior EventName="SelectionChanged">
                                <Core:InvokeCommandAction Command="{x:Bind VM.LabelPropertySelectionChangedCommand}" CommandParameter="{Binding ElementName=ListView_LabelPropertyTrees, Path=SelectedItem}" />
                            </Core:EventTriggerBehavior>
                        </i:Interaction.Behaviors>
                        <ListView.ItemTemplate>
                            <DataTemplate x:DataType="models:LabelPropertyTree">
                                <ListViewItem Width="200" IsSelected="True">
                                    <TextBlock Text="{x:Bind LabelProperty.Name, Mode=OneWay}">
                                        <TextBlock.ContextFlyout>
                                            <MenuFlyout>
                                                <MenuFlyoutItem
                                                    Click="ADD_PropertyData_Click_Right"
                                                    Icon="Add"
                                                    Text="新增" />
                                                <MenuFlyoutItem
                                                    Click="Edit_Property_Click_Right"
                                                    Icon="Edit"
                                                    Text="编辑" />
                                                <MenuFlyoutItem
                                                    Click="Delete_Property_Click_Right"
                                                    Icon="Delete"
                                                    Text="删除" />
                                                <MenuFlyoutItem
                                                    Click="Edit_PropertyLink_Click_Right"
                                                    Icon="Link"
                                                    Text="关联" />
                                            </MenuFlyout>
                                        </TextBlock.ContextFlyout>
                                    </TextBlock>
                                </ListViewItem>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                </Grid>
                <Grid
                    x:Name="Grid_LPEZ_Link"
                    Height="250"
                    controls:DockPanel.Dock="Bottom"
                    BorderBrush="BlueViolet"
                    BorderThickness="0"
                    Visibility="Collapsed">
                    <TabView x:Name="TabView_LPEZ_Link" CloseButtonOverlayMode="OnPointerOver" />

                </Grid>
                <Grid>
                    <GridView
                        x:Name="GridView_Current_LPEZCollection"
                        BorderBrush="Blue"
                        BorderThickness="0"
                        ItemsSource="{x:Bind VM.CurrentLabelPropertyDataCollection, Mode=OneWay}"
                        SelectionChanged="GridView_SelectionChanged"
                        SelectionMode="Single">
                        <!--<i:Interaction.Behaviors>
                            <Core:EventTriggerBehavior EventName="SelectionChanged">
                                <Core:InvokeCommandAction Command="{x:Bind VM.PropertyData_SelectionChangedCommand}" CommandParameter="{Binding ElementName=GridView_Current_LPEZCollection, Path=SelectedItem}" />
                            </Core:EventTriggerBehavior>
                        </i:Interaction.Behaviors>-->
                        <GridView.ItemTemplate>
                            <DataTemplate x:DataType="models:LabelPropertyTree">
                                <Grid>
                                    <Grid.ContextFlyout>
                                        <MenuFlyout>

                                            <MenuFlyoutItem
                                                Click="Edit_PropertyData_Click_Right"
                                                Icon="Edit"
                                                Text="编辑" />
                                            <MenuFlyoutItem
                                                Click="Edit_PropertyDataLink_Click_Right"
                                                Icon="Link"
                                                Text="关联" />
                                            <MenuFlyoutItem
                                                Click="Delete_PropertyData_Click_Right"
                                                Icon="Delete"
                                                Text="删除" />

                                        </MenuFlyout>
                                    </Grid.ContextFlyout>
                                    <Border BorderBrush="CadetBlue" BorderThickness="0">

                                        <TextBlock
                                            Width="110"
                                            Margin="10,10,10,10"
                                            HorizontalAlignment="Center"
                                            Text="{x:Bind LabelProperty.Name, Mode=OneWay}"
                                            TextAlignment="Center" />

                                    </Border>
                                </Grid>
                            </DataTemplate>
                        </GridView.ItemTemplate>
                    </GridView>
                </Grid>
            </controls:DockPanel>
        </Grid>
    </Grid>


    <!--
        The DataTemplate shown above is bound to a custom-class type called NestedCategory,
        which is defined in the code-behind. NestedCategory objects have the following two attributes:
        a CategoryName (string), and a collection of strings called CategoryItems.
    -->

    <!--  The inner ItemsRepeater is bound to its own, separate DataTemplate called StringDataTemplateColor:  -->




</Page>
